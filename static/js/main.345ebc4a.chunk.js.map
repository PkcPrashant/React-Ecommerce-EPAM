{"version":3,"sources":["redux/products/productsAction.js","redux/products/productsTypes.js","redux/selectedProduct/selectedProductAction.js","redux/selectedProduct/selectedProductTypes.js","redux/orderedProduct/orderedProductAction.js","redux/orderedProduct/orderedProductTypes.js","components/Product.js","components/ProductList.js","components/Header.js","components/ProductInfo.js","components/ProductDetails.js","redux/cart/cartAction.js","redux/cart/cartTypes.js","components/Cart.js","components/Orders.js","components/Address.js","components/Checkout.js","redux/orders/ordersAction.js","redux/orders/ordersTypes.js","App.js","serviceWorker.js","redux/products/productsReducer.js","redux/selectedProduct/selectedProductReducer.js","redux/cart/cartReducer.js","redux/orders/ordersReducer.js","redux/orderedProduct/orderedProductReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["fetchProductsRequest","type","fetchProductsSuccess","products","payload","fetchProductsFailure","error","fetchSelectedProductRequest","fetchSelectedProductSuccess","product","fetchSelectedProductFailure","fetchOrderedProduct","orderedProduct","Product","className","src","alt","title","categories","join","authors","to","isbn","ProductList","useSelector","state","dispatch","useDispatch","console","log","useEffect","document","getElementById","innerHTML","data","length","then","default","catch","loading","map","index","key","Header","id","data-toggle","data-target","aria-controls","aria-expanded","aria-label","ProductInfo","props","style","pageCount","cart","shortDescription","find","onClick","handleCart","handleBuyProduct","ProductDetails","paramId","match","params","selectedProduct","productId","item","addProductToCart","Cart","Orders","orders","Address","useState","houseNo","landmark","city","pincode","address","setAddress","isEmpty","Object","values","some","x","submitted","setSubmitted","placeholder","onChange","event","target","value","setIsAddressAdded","Checkout","isAddressAdded","App","exact","path","component","Boolean","window","location","hostname","initialState","productsReducer","action","selectedProductReducer","cartReducer","ordersReducer","orderedProductReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.345ebc4a.chunk.js","sourcesContent":["import {\r\n    FETCH_PRODUCTS_REQUEST,\r\n    FETCH_PRODUCTS_SUCCESS,\r\n    FETCH_PRODUCTS_FAILURE\r\n} from './productsTypes';\r\n\r\nexport const fetchProducts = () => {\r\n    console.log(\"ACTIOn\")\r\n    return (dispatch) => {\r\n        dispatch(fetchProductsRequest);\r\n        import('../../mockProductData')\r\n            .then(data => dispatch(fetchProductsSuccess(data.default)))\r\n            .catch(error => dispatch(fetchProductsFailure(error)))\r\n    }\r\n}\r\n\r\nexport const fetchProductsRequest = () => {\r\n    return {\r\n        type: FETCH_PRODUCTS_REQUEST\r\n    }\r\n}\r\n\r\nexport const fetchProductsSuccess = (products) => {\r\n    return {\r\n        type: FETCH_PRODUCTS_SUCCESS,\r\n        payload: products\r\n    }\r\n}\r\n\r\nexport const fetchProductsFailure = (error) => {\r\n    return {\r\n        type: FETCH_PRODUCTS_FAILURE,\r\n        payload: error\r\n    }\r\n}","export const FETCH_PRODUCTS_REQUEST = 'FETCH_PRODUCTS_REQUEST';\r\nexport const FETCH_PRODUCTS_SUCCESS = 'FETCH_PRODUCTS_SUCCESS';\r\nexport const FETCH_PRODUCTS_FAILURE = 'FETCH_PRODUCTS_FAILURE';","import {\r\n    FETCH_SELECTED_PRODUCT_REQUEST,\r\n    FETCH_SELECTED_PRODUCT_SUCCESS,\r\n    FETCH_SELECTED_PRODUCT_FAILURE\r\n} from './selectedProductTypes';\r\n\r\nexport const fetchSelectedProduct = (productId) => {\r\n    return (dispatch) => {\r\n        dispatch(fetchSelectedProductRequest);\r\n        import('../../mockProductData')\r\n            .then(data => data.default.find(item => item.isbn === productId ))\r\n            .then(data => {\r\n                dispatch(fetchSelectedProductSuccess(data))\r\n            })\r\n            .catch(error => dispatch(fetchSelectedProductFailure(error)))\r\n    }\r\n}\r\n\r\nexport const fetchSelectedProductRequest = () => {\r\n    return {\r\n        type: FETCH_SELECTED_PRODUCT_REQUEST\r\n    }\r\n}\r\n\r\nexport const fetchSelectedProductSuccess = (product) => {\r\n    return {\r\n        type: FETCH_SELECTED_PRODUCT_SUCCESS,\r\n        payload: product\r\n    }\r\n}\r\n\r\nexport const fetchSelectedProductFailure = (error) => {\r\n    return {\r\n        type: FETCH_SELECTED_PRODUCT_FAILURE,\r\n        payload: error\r\n    }\r\n}","export const FETCH_SELECTED_PRODUCT_REQUEST = 'FETCH_SELECTED_PRODUCT_REQUEST';\r\nexport const FETCH_SELECTED_PRODUCT_SUCCESS = 'FETCH_SELECTED_PRODUCT_SUCCESS';\r\nexport const FETCH_SELECTED_PRODUCT_FAILURE = 'FETCH_SELECTED_PRODUCT_FAILURE';","import {\r\n    FETCH_ORDERED_PRODUCT\r\n} from './orderedProductTypes';\r\n\r\nexport const fetchOrderedProduct = (orderedProduct) => {\r\n    return {\r\n        type: FETCH_ORDERED_PRODUCT,\r\n        payload: orderedProduct\r\n    }\r\n}\r\n","export const FETCH_ORDERED_PRODUCT = 'FETCH_ORDERED_PRODUCT';","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Product = ({product}) => {\r\n    return (\r\n        <div className=\"card shadow p-3 my-3 mx-2 rounded col-md-2\">\r\n            <img className=\"card-img-top img-rounded\" src=\"https://www.asme.org/getmedia/c2c8ea5a-b690-4ba7-92bb-34bd1432862b/book_guide_hero_books.png\" alt=\"product\"></img>\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{product.title}</h5>\r\n                <p className=\"card-text\">{product.categories.join(\", \")}</p>\r\n                <p className=\"card-text\">{product.authors.join(\", \")}</p>\r\n                <Link to={`/details/${product.isbn}`}>\r\n                    <button className=\"btn btn-info\">Buy Now</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Product;","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchProducts } from \"../redux\";\r\n\r\nimport Product from \"./Product\";\r\n\r\nconst ProductList = () => {\r\n  const products = useSelector((state) => state.products);\r\n  const dispatch = useDispatch();\r\n  console.log(\"PRODUCT LIST CALLED\");\r\n  useEffect(() => {\r\n    document.getElementById(\"header\").innerHTML = \"E Commerce\";\r\n    !products.data.length && dispatch(fetchProducts());\r\n  }, [products, dispatch]);\r\n\r\n  return products && products.loading ? (\r\n    <p>Loading</p>\r\n  ) : products.error ? (\r\n    <p>Something went Wrong. {products.error}</p>\r\n  ) : (\r\n    <div className=\"d-flex flex-wrap justify-content-around\">\r\n      {products.data.map((product, index) => (\r\n        <Product product={product} key={index} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"nav-link\" to=\"/\" id=\"header\">E Commerce</Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse \" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav mr-5 ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/orders\">My Orders</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/viewcart\">Cart</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProductInfo = ({product, ...props}) => {\r\n    console.log(\"PRODUCT INFO CALLED\");\r\n    return (\r\n        <div className=\"card bg-light p-2 m-4\" style={{\"maxWidth\": \"60rem\"}}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                <img src=\"https://www.asme.org/getmedia/c2c8ea5a-b690-4ba7-92bb-34bd1432862b/book_guide_hero_books.png\" className=\"card-img\" alt=\"product\" />\r\n                </div>\r\n                <div className=\"col-md-8 card-body pt-0\">\r\n                    <h5 className=\"card-header pl-1\">{product.title}</h5>\r\n                    <p className=\"card-text\">Price: Rs {product.pageCount}</p> {/*Replace page count with Price*/}\r\n                    <p className=\"card-text\">Author: {product.authors && product.authors.join(\", \")}</p>\r\n                    <p className=\"card-text\">Total Pages: {product.pageCount}</p>\r\n                    <p className=\"card-text\">Category: {product.categories && product.categories.join(\", \")}</p>\r\n                    <p className=\"card-text\">ISBN: {product.isbn}</p>\r\n                    \r\n\r\n                    {\r\n                        props && props.cart && (\r\n                        <>\r\n                            <p className=\"card-text\">{product.shortDescription}</p>\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                { \r\n                                    props.cart.find(products => products.title === product.title)\r\n                                        ? <Link to=\"/viewcart\"><button className=\"btn btn-info\">Go to Cart</button></Link>\r\n                                        : <button className=\"btn btn-info\" onClick={() => props.handleCart()}>Add to Cart</button>\r\n                                }\r\n                                <Link to={`/checkout`}>\r\n                                    <button className=\"btn btn-info\" onClick={() => props.handleBuyProduct()}>Buy Now</button>\r\n                                </Link>\r\n                            </div>\r\n                        </>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductInfo;","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  fetchSelectedProduct,\r\n  addProductToCart,\r\n  fetchOrderedProduct,\r\n} from \"../redux\";\r\nimport ProductInfo from \"./ProductInfo\";\r\n\r\nconst ProductDetails = (props) => {\r\n  const paramId = props.match.params.id;\r\n  const product = useSelector((state) => state.selectedProduct.data);\r\n  const cart = useSelector((state) => state.cart.data);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    console.log(\"PRODUCT DETAILS EFFECT CALLED\");\r\n    document.getElementById(\"header\").innerHTML = \"E Commerce | Details\";\r\n    dispatch(fetchSelectedProduct(paramId));\r\n  }, [dispatch, paramId]);\r\n\r\n  console.log(\"PRODUCT DETAILS CALLED\");\r\n\r\n  const handleCart = () => {\r\n    dispatch(addProductToCart(product));\r\n  };\r\n\r\n  const handleBuyProduct = () => {\r\n    dispatch(fetchOrderedProduct([product]));\r\n  };\r\n\r\n  return (\r\n    <ProductInfo\r\n      product={product}\r\n      cart={cart}\r\n      handleCart={handleCart}\r\n      handleBuyProduct={handleBuyProduct}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProductDetails;\r\n","import {\r\n    ADD_PRODUCT_TO_CART,\r\n    CLEAR_CART\r\n} from './cartTypes';\r\n\r\n\r\nexport const addProductToCart = (product) => {\r\n    return {\r\n        type: ADD_PRODUCT_TO_CART,\r\n        payload: product\r\n    }\r\n}\r\n\r\nexport const clearCart = () => {\r\n    return {\r\n        type: CLEAR_CART\r\n    }\r\n}\r\n","export const ADD_PRODUCT_TO_CART = 'ADD_PRODUCT_TO_CART';\r\nexport const CLEAR_CART = 'CLEAR_CART';","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchOrderedProduct } from \"../redux\";\r\nimport ProductInfo from \"./ProductInfo\";\r\n\r\nconst Cart = () => {\r\n  const cart = useSelector((state) => state.cart.data);\r\n  const dispatch = useDispatch();\r\n  console.log(\"CART CALLED\");\r\n  useEffect(() => {\r\n    document.getElementById(\"header\").innerHTML = \"E Commerce | Cart\";\r\n  }, []);\r\n\r\n  const handleBuyProduct = () => {\r\n    dispatch(fetchOrderedProduct(cart));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {!cart.length ? (\r\n        <p className=\"mt-3\">Your Cart is Empty</p>\r\n      ) : (\r\n        <div>\r\n          {cart.map((product, index) => {\r\n            return <ProductInfo key={index} product={product} />;\r\n          })}\r\n          <Link to={`/checkout`}>\r\n            <button\r\n              className=\"btn btn-info mx-5 mb-3\"\r\n              onClick={() => handleBuyProduct()}\r\n            >\r\n              Buy Now\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport ProductInfo from './ProductInfo';\r\n\r\nconst Orders = () => {\r\n\r\n    const orders = useSelector(state => state.orders.data);\r\n    console.log(\"ORDERS CALLED\", orders);\r\n\r\n    return (\r\n        !orders.length\r\n        ? <p className=\"mt-3 ml-3\">You haven't ordered anything yet.</p>\r\n        : orders.map((product, index) => {\r\n            return (\r\n                <ProductInfo\r\n                    key={index}\r\n                    product={product}\r\n                />\r\n            )\r\n        })\r\n    )\r\n}\r\n\r\nexport default Orders;","import React, { useState } from 'react';\r\n\r\nconst Address = (props) => {\r\n\r\n    const [ address, setAddress ] = useState({\r\n        houseNo: '',\r\n        landmark: '',\r\n        city: '',\r\n        state: '',\r\n        pincode: 0\r\n    })\r\n    console.log(\"ADDRESS CALLED\");\r\n    const isEmpty = Object.values(address).some(x => !x);\r\n\r\n    const [ submitted, setSubmitted ] = useState(false);\r\n\r\n    const handleSubmit = () => {\r\n        setSubmitted(true);\r\n        !isEmpty && props.setIsAddressAdded(true);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"container card col-md-3 my-3\">\r\n            <h5 className=\"card-title my-3\">Provide the Billing Address</h5>\r\n            { (submitted && isEmpty) && <span className=\"alert alert-danger\">Plaese Fill All Fields</span> }\r\n            <div>\r\n                <input type=\"text\" className=\"form-control mb-3\" placeholder=\"Enter House No\" onChange={(event) => setAddress({ ...address, houseNo: event.target.value })} />\r\n                <input type=\"text\" className=\"form-control mb-3\" placeholder=\"Enter Landmark\" onChange={(event) => setAddress({ ...address, landmark: event.target.value })} />\r\n                <input type=\"text\" className=\"form-control mb-3\" placeholder=\"Enter City\" onChange={(event) => setAddress({ ...address, city: event.target.value })} />\r\n                <input type=\"text\" className=\"form-control mb-3\" placeholder=\"Enter State\" onChange={(event) => setAddress({ ...address, state: event.target.value })} />\r\n                <input type=\"number\" className=\"form-control mb-3\" placeholder=\"Enter Pincode\" onChange={(event) => setAddress({ ...address, pincode: event.target.value })} />\r\n                <button className=\"btn btn-primary mb-3\" onClick={() => handleSubmit()}>Deliver Here</button>\r\n            </div> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Address;","import React, { useEffect, useState } from 'react';\r\nimport Address from './Address';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { fetchOrders } from '../redux';\r\n\r\nconst Checkout = () => {\r\n\r\n    useEffect(() => {\r\n        document.getElementById(\"header\").innerHTML = \"E Commerce | Checkout\";\r\n    }, [])\r\n\r\n    const orderedProduct = useSelector(state => state.orderedProduct.data);\r\n    const dispatch = useDispatch();\r\n\r\n    const [ isAddressAdded, setIsAddressAdded ] = useState(false);\r\n    console.log(\"CHECKOUT CALLED \", orderedProduct);\r\n    if(isAddressAdded) {\r\n        console.log(\"RUNN \", isAddressAdded)\r\n        dispatch(fetchOrders(orderedProduct));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { \r\n                !isAddressAdded\r\n                    ? <Address setIsAddressAdded={setIsAddressAdded} />\r\n                    : <span>Thank you for buying the product(s) with us.</span> \r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Checkout;","import {\r\n    FETCH_ORDERS\r\n} from './ordersTypes';\r\n\r\nexport const fetchOrders = (orders) => {\r\n    return {\r\n        type: FETCH_ORDERS,\r\n        payload: orders\r\n    }\r\n}\r\n","export const FETCH_ORDERS = 'FETCH_ORDERS';","import React from 'react';\nimport ProductList from './components/ProductList';\nimport Header from './components/Header';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ProductDetails from './components/ProductDetails';\nimport Cart from './components/Cart';\nimport Orders from './components/Orders';\nimport Checkout from './components/Checkout';\n\nfunction App() {\n\n  return (\n    <BrowserRouter>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={ProductList} />\n        <Route path='/details/:id' component={ProductDetails} />\n        <Route path='/viewcart' component={Cart} />\n        <Route path='/checkout' component={Checkout} />\n        <Route path=\"/orders\" component={Orders} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    FETCH_PRODUCTS_REQUEST,\r\n    FETCH_PRODUCTS_SUCCESS,\r\n    FETCH_PRODUCTS_FAILURE\r\n} from './productsTypes';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    data: [],\r\n    error: ''\r\n}\r\n\r\nconst productsReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FETCH_PRODUCTS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload\r\n            }\r\n        case FETCH_PRODUCTS_FAILURE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default productsReducer;","import {\r\n    FETCH_SELECTED_PRODUCT_REQUEST,\r\n    FETCH_SELECTED_PRODUCT_SUCCESS,\r\n    FETCH_SELECTED_PRODUCT_FAILURE\r\n} from './selectedProductTypes';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    data: [],\r\n    error: ''\r\n}\r\n\r\nconst selectedProductReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FETCH_SELECTED_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_SELECTED_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload\r\n            }\r\n        case FETCH_SELECTED_PRODUCT_FAILURE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default selectedProductReducer;","import {\r\n    ADD_PRODUCT_TO_CART,\r\n    CLEAR_CART\r\n} from './cartTypes';\r\n\r\nconst initialState = {\r\n    data: [],\r\n}\r\n\r\nconst cartReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_PRODUCT_TO_CART:\r\n            return {\r\n                data: [...state.data, action.payload]\r\n            }\r\n        case CLEAR_CART:\r\n            return {\r\n                data: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default cartReducer;","import {\r\n    FETCH_ORDERS,\r\n} from './ordersTypes';\r\n\r\nconst initialState = {\r\n    data: [],\r\n}\r\n\r\nconst ordersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FETCH_ORDERS:\r\n            return {\r\n                data: [ ...state.data, ...action.payload ]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default ordersReducer;","import {\r\n    FETCH_ORDERED_PRODUCT,\r\n} from './orderedProductTypes';\r\n\r\nconst initialState = {\r\n    data: [],\r\n}\r\n\r\nconst orderedProductReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FETCH_ORDERED_PRODUCT:\r\n            return {\r\n                data: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default orderedProductReducer;","import { combineReducers } from 'redux';\r\nimport productsReducer from './products/productsReducer';\r\nimport selectedProductReducer from './selectedProduct/selectedProductReducer';\r\nimport cartReducer from './cart/cartReducer';\r\nimport ordersReducer from './orders/ordersReducer';\r\nimport orderedProductReducer from './orderedProduct/orderedProductReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    products: productsReducer,\r\n    selectedProduct: selectedProductReducer,\r\n    cart: cartReducer,\r\n    orders: ordersReducer,\r\n    orderedProduct: orderedProductReducer\r\n  })\r\n  \r\n  export default rootReducer","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\nimport rootReducer from './rootReducer';\r\n\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}